@startuml
'https://plantuml.com/class-diagram
enum DeviceType{
    ANDROID
    IOS
    WINDOWS
}

class DeviceInfo{
    DeviceType deviceType;
}

class AgentManagementService {
    Map<String, DeviceInfo> deviceInfoMap
    File testBaseDir
    File deviceLogBaseDir
}
class DeviceStatusListenerManager{
    List<DeviceStatusListener> deviceStatusListeners
    registerDeviceStatusListener(DeviceStatusListener)
    onDeviceInactive(DeviceInfo)
    onDeviceActive(DeviceInfo)
}
class TestTaskEngineService{
    TestDevice chooseDevice(TestTask)
    Map<String, TestDevice> taskDeviceMap
}


class DeviceInfo
interface ITestDeviceCapability
class TestDeviceCapability implements ITestDeviceCapability
class TestDeviceComboCapability implements ITestDeviceCapability
class TestDeviceCapabilityAdapter implements ITestDeviceCapability

class TestDevice{
String Tag
DeviceInfo deviceInfo;
ScreenRecorder screenRecorder;
LogCollector logCollector;
Map<Thread, String> currentCommand
Map<Thread, String> currentCommand
Map<Thread, TestTask> currentTask
}

class TestDeviceCombo extends TestDevice{
List<TestDevice> pairedTestDevices
TestDevice getDeviceByTag(String tag)
}

class TestRunner{
    runTest(TestTask,TestDevice)
}

interface IDeviceDriver
class DeviceDriverManager implements IDeviceDriver{
Map<DeviceType, IDeviceDriver> deviceDrivers
}
abstract class AbstractDeviceDriver implements IDeviceDriver
class AndroidDeviceDriver extends AbstractDeviceDriver
class IOSDeviceDriver   extends AbstractDeviceDriver
class WindowsDeviceDriver extends AbstractDeviceDriver


TestRunner --> TestDevice
TestRunner -r-> TestDeviceCapabilityAdapter
TestDeviceCapability --> DeviceDriverManager
TestDeviceComboCapability --> DeviceDriverManager

TestTaskEngineService --> TestRunner

IDeviceDriver -> DeviceInfo
AndroidDeviceDriver *--> DeviceStatusListenerManager : notify
IOSDeviceDriver *--> DeviceStatusListenerManager : notify
WindowsDeviceDriver *--> DeviceStatusListenerManager : notify

DeviceStatusListenerManager .. AgentManagementService : notify

@enduml