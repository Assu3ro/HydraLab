@startuml
'https://plantuml.com/class-diagram'

package "sdk" {

    class PerformanceTestSpec {
        {static}+int FLAG_MEM
        {static}+int FLAG_BATTERY
        -int typeFlag
        -String appId
        -String deviceId
        -String stepName
        +constructor()
        +getter()
        +setter()
    }
    interface PerformanceInspector {
        void initialize(PerformanceTestSpec performanceTestSpec)
        void collectPerformanceMetrics(PerformanceTestSpec performanceTestSpec)
        PerformanceResult<?> analyzeResults(PerformanceTestSpec performanceTestSpec)
    }

    class PerformanceExecutor {
        ~List<PerformanceRecorder> inspectors
        +void addInspector(PerformanceInspector performanceRecorder)
        -void notifyEach()
        +void initDevice(PerformanceTestSpec performanceTestSpec)
        +void capturePerformanceMetrics(PerformanceTestSpec performanceTestSpec)
        +List<PerformanceResult<?>> analyzeResult(PerformanceTestSpec performanceTestSpec)
    }

    class PerformanceResult {
        String category
        T performanceData
    }


    PerformanceInspector -left..> PerformanceTestSpec
    PerformanceInspector <---up PerformanceExecutor
    PerformanceInspector -right..> PerformanceResult
}

package "common" {
    class PerformanceManager {
        AndroidBatteryInspector androidBatteryInspector;
        AndroidMemoryInspector androidMemoryInspector;
        WindowsBatteryInspector windowsBatteryInspector;
        WindowsMemoryInspector windowsMemoryInspector;
        PerformanceExecutor()
    }
    PerformanceInspector <|-- AndroidBatteryRecorder
    PerformanceInspector <|-- AndroidMemoryRecorder
    PerformanceInspector <|-- WindowsBatteryRecorder
    PerformanceInspector <|-- WindowsMemoryRecorder

    AndroidBatteryRecorder o-- PerformanceManager
    AndroidMemoryRecorder o-- PerformanceManager
    WindowsBatteryRecorder o-- PerformanceManager
    WindowsMemoryRecorder o-- PerformanceManager
}
@enduml

@startuml
participant PerformanceManager
participant AppiumRunner
participant PerformanceExecutor
participant AndroidMemRecorder
participant AndroidBatteryRecorder
participant WindowsBatteryRecorder
participant ThreadParam

activate AppiumRunner
AppiumRunner -> PerformanceExecutor : new PerformanceExecutor()
activate PerformanceExecutor
AppiumRunner -> PerformanceManager: get...Inspectors
PerformanceManager -> AppiumRunner: XxxInspector
AppiumRunner -> PerformanceExecutor : addInspector(XxxInspector)
AppiumRunner -> ThreadParam: init(..., PerformanceExecutor)
activate ThreadParam
AppiumRunner -> PerformanceExecutor : initialize(performanceTestSpec1)
PerformanceExecutor -> AndroidMemRecorder : initialize(performanceTestSpec1)
PerformanceExecutor -> AndroidBatteryRecorder : initialize(performanceTestSpec1)
AppiumRunner -> PerformanceExecutor : initialize(performanceTestSpec2)
PerformanceExecutor -> WindowsBatteryRecorder : initialize(performanceTestSpec2)
AppiumRunner -> PerformanceExecutor : capturePerformanceMetrics
PerformanceExecutor -> AndroidMemRecorder : addMetricsData
PerformanceExecutor -> AndroidBatteryRecorder : addMetricsData
PerformanceExecutor -> WindowsBatteryRecorder : addMetricsData
AppiumRunner -> PerformanceExecutor : analyzeResults
PerformanceExecutor -> AndroidMemRecorder : analyzeResults
PerformanceExecutor -> AndroidBatteryRecorder : analyzeResults
PerformanceExecutor -> WindowsBatteryRecorder : analyzeResults
PerformanceExecutor -> AppiumRunner: List<PerformanceResult<?>>
deactivate PerformanceExecutor
AppiumRunner -> ThreadParam: clean
deactivate ThreadParam
deactivate AppiumRunner
@enduml