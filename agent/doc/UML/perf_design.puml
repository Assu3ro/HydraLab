@startuml
'https://plantuml.com/class-diagram'

package "sdk" {

    class PerformanceTestSpec {
        +{static}String TYPE_ANDROID_MEMORY_DUMP = "AndroidMemoryDump"
        +{static}String TYPE_ANDROID_MEMORY_INFO = "AndroidMemoryInfo"
        +{static}String TYPE_ANDROID_BATTERY_INFO = "AndroidBatteryInfo"
        +{static}String TYPE_WIN_BATTERY = "WindowsBattery"
        +{static}String TYPE_WIN_MEMORY = "WindowsMemory"
        -List<String> typeSpecList
        -String appId
        -String deviceId
        -String stepName
        +constructor()
        +getter()
        +setter()
    }
    interface PerformanceInspector {
        void initialize(PerformanceTestSpec performanceTestSpec, File resultFolder)
        PerformanceInspectionResult inspect(PerformanceTestSpec performanceTestSpec, File resultFolder)
        PerformanceResult<?> parse(List<PerformanceInspectionResult> performanceInspectionResultList)
    }

    class PerformanceInspectionService {
        File resultFolder
        List<PerformanceRecorder> inspectors
        List<PerformanceInspectionResult> performanceInspectionResultList
        List<ScheduledFuture<?>> inspectPerformanceTimerList
        {static} ScheduledExecutorService timerExecutor
        +void addInspector(PerformanceInspector performanceRecorder)
        -void notifyEach()
        +void initialize(PerformanceTestSpec performanceTestSpec)
        +void startInspectPerformanceTimer((PerformanceTestSpec performanceTestSpec, long interval)
        +void inspect(PerformanceTestSpec performanceTestSpec)
        +List<PerformanceResult<?>> parse()
    }

    class PerformanceResult {
        String category
        T performanceData
        List<PerformanceInspectionResult> performanceInspectionResultList
    }

    class PerformanceInspectionResult {
        String type;
        File profilingRawResultFile;
    }


    PerformanceInspector -left..> PerformanceTestSpec
    PerformanceInspector -up..> PerformanceInspectionResult
    PerformanceInspector <---right PerformanceInspectionService
    PerformanceInspector -up..> PerformanceResult
    PerformanceResult -right..> PerformanceInspectionResult
}

package "common" {
    class PerformanceInspectorManager {
        AndroidBatteryInspector androidBatteryInspector;
        AndroidMemoryInfoInspector androidMemoryInfoInspector;
        AndroidMemoryDumpInspector androidMemoryDumpInspector;
        WindowsBatteryInspector windowsBatteryInspector;
        WindowsMemoryInspector windowsMemoryInspector;
    }
    PerformanceInspector <|-- AndroidBatteryInspector
    PerformanceInspector <|-- AndroidMemoryInfoInspector
    PerformanceInspector <|-- AndroidMemoryDumpInspector
    PerformanceInspector <|-- WindowsBatteryInspector
    PerformanceInspector <|-- WindowsMemoryInspector

    AndroidBatteryInspector --o PerformanceInspectorManager
    AndroidMemoryInfoInspector --o PerformanceInspectorManager
    AndroidMemoryDumpInspector --o PerformanceInspectorManager
    WindowsBatteryInspector --o PerformanceInspectorManager
    WindowsMemoryInspector --o PerformanceInspectorManager

    TestRunner o-r- PerformanceInspectorManager
}
@enduml

@startuml
participant PerformanceManager
participant Runner
participant PerformanceInspectionService
participant AndroidMemRecorder
participant AndroidBatteryRecorder
participant WindowsBatteryRecorder
participant ThreadParam

activate Runner
Runner -> PerformanceInspectionService : new PerformanceInspectionService()
activate PerformanceInspectionService
Runner -> PerformanceManager: get...Inspectors
PerformanceManager -> Runner: XxxInspector
Runner -> PerformanceInspectionService : addInspector(XxxInspector)
Runner -> ThreadParam: init(..., PerformanceInspectionService)
activate ThreadParam
Runner -> PerformanceInspectionService : initialize(performanceTestSpec1)
PerformanceInspectionService -> AndroidMemRecorder : initialize(performanceTestSpec1)
PerformanceInspectionService -> AndroidBatteryRecorder : initialize(performanceTestSpec1)
Runner -> PerformanceInspectionService : initialize(performanceTestSpec2)
PerformanceInspectionService -> WindowsBatteryRecorder : initialize(performanceTestSpec2)
Runner -> PerformanceInspectionService : capturePerformanceMetrics
PerformanceInspectionService -> AndroidMemRecorder : addMetricsData
PerformanceInspectionService -> AndroidBatteryRecorder : addMetricsData
PerformanceInspectionService -> WindowsBatteryRecorder : addMetricsData
Runner -> PerformanceInspectionService : analyzeResults
PerformanceInspectionService -> AndroidMemRecorder : analyzeResults
PerformanceInspectionService -> AndroidBatteryRecorder : analyzeResults
PerformanceInspectionService -> WindowsBatteryRecorder : analyzeResults
PerformanceInspectionService -> Runner: List<PerformanceResult<?>>
deactivate PerformanceInspectionService
Runner -> ThreadParam: clean
deactivate ThreadParam
deactivate Runner
@enduml